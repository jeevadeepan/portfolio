[{"C:\\Users\\Jeeva\\code\\portfolio\\src\\index.tsx":"1","C:\\Users\\Jeeva\\code\\portfolio\\src\\reportWebVitals.ts":"2","C:\\Users\\Jeeva\\code\\portfolio\\src\\App.tsx":"3","C:\\Users\\Jeeva\\code\\portfolio\\src\\challenges\\pomodoro\\Pomodoro.tsx":"4","C:\\Users\\Jeeva\\code\\portfolio\\src\\challenges\\pomodoro\\progressring\\ProgressRing.tsx":"5","C:\\Users\\Jeeva\\code\\portfolio\\src\\challenges\\pomodoro\\settings\\Settings.tsx":"6","C:\\Users\\Jeeva\\code\\portfolio\\src\\challenges\\pomodoro\\timer\\Timer.tsx":"7","C:\\Users\\Jeeva\\code\\portfolio\\src\\hooks.tsx":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":656,"mtime":1612128132103,"results":"12","hashOfConfig":"10"},{"size":1630,"mtime":1613324756816,"results":"13","hashOfConfig":"10"},{"size":913,"mtime":1612145765387,"results":"14","hashOfConfig":"10"},{"size":2941,"mtime":1612720197879,"results":"15","hashOfConfig":"10"},{"size":2728,"mtime":1613324749441,"results":"16","hashOfConfig":"10"},{"size":546,"mtime":1613311892390,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"iwjmau",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Jeeva\\code\\portfolio\\src\\index.tsx",[],["37","38"],"C:\\Users\\Jeeva\\code\\portfolio\\src\\reportWebVitals.ts",[],"C:\\Users\\Jeeva\\code\\portfolio\\src\\App.tsx",[],"C:\\Users\\Jeeva\\code\\portfolio\\src\\challenges\\pomodoro\\Pomodoro.tsx",["39"],"C:\\Users\\Jeeva\\code\\portfolio\\src\\challenges\\pomodoro\\progressring\\ProgressRing.tsx",["40"],"import React, { useState } from 'react';\r\nimport './ProgressRing.scss';\r\n\r\nfunction ProgressRing(props: any) {\r\n    const { radius, stroke, progress } = props;\r\n    const normalizedRadius = (radius - stroke * 2);\r\n    const circumference = normalizedRadius * 2 * Math.PI;\r\n    const strokeDashoffset = circumference - (progress / 100 * circumference);\r\n\r\n    return (\r\n        <svg\r\n            height={radius * 2}\r\n            width={radius * 2}\r\n        >\r\n            <circle\r\n                stroke=\"#F87070\"\r\n                fill=\"transparent\"\r\n                strokeWidth={stroke}\r\n                strokeDasharray={circumference + ' ' + circumference}\r\n                strokeLinecap=\"round\"\r\n                style={{ strokeDashoffset }}\r\n                r={normalizedRadius}\r\n                cx={radius}\r\n                cy={radius}\r\n            />\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport default ProgressRing;","C:\\Users\\Jeeva\\code\\portfolio\\src\\challenges\\pomodoro\\settings\\Settings.tsx",["41","42","43"],"import React, { useState } from 'react';\r\nimport './Settings.scss';\r\nimport CloseIcon from '../assets/img/icon-close.svg';\r\nimport TickIcon from '../assets/img/icon-tick.svg';\r\n\r\nfunction Settings(props: any) {\r\n\r\n    const [pdTimer, setPdTimer] = useState(25);\r\n    const [sbTimer, setSbTimer] = useState(5);\r\n    const [lbTimer, setLbTimer] = useState(15);\r\n    const settingsApplyHandler = () => { };\r\n    return (\r\n        <div className=\"pd-settings-overlay\">\r\n            <div className='pd-settings' role='dialog' aria-labelledby='pd-settings-title'>\r\n                <div className='pd-settings-header'>\r\n                    <h2 id='pd-settings-title'>Settings</h2>\r\n                    <button id='pd-settings-close'><img src={CloseIcon} alt=\"Close Settings\" onClick={props.closeHandler.bind(null, false)} /></button>\r\n                </div>\r\n                <form onSubmit={settingsApplyHandler}>\r\n                    <fieldset className='pd-timer-fs'>\r\n                        <h3 className='pd-time-heading'>Time (Minutes)</h3>\r\n                        <div className=\"pd-timer-container\">\r\n                            <label>pomodoro\r\n                                <input type=\"number\" value={pdTimer}/>\r\n                            </label>\r\n                            <label>short break\r\n                                <input type=\"number\" value={sbTimer}/>\r\n                            </label>\r\n                            <label>long break\r\n                                <input type=\"number\" value={lbTimer}/>\r\n                            </label>\r\n                        </div>\r\n                    </fieldset>\r\n                    <fieldset>\r\n                        <h3 id='pd-font-label'>Font</h3>\r\n                        <ul className=\"pd-font-options\" role='radiogroup' aria-labelledby='pd-font-label'>\r\n                            <li className=\"pd-font-option selected\">Aa</li>\r\n                            <li className=\"pd-font-option\">Aa</li>\r\n                            <li className=\"pd-font-option\">Aa</li>\r\n                        </ul>\r\n                    </fieldset>\r\n                    <fieldset className='pd-color-fs'>\r\n                        <h3 id='pd-color-label'>Color</h3>\r\n                        <ul className=\"pd-color-options\" role='radiogroup' aria-labelledby='pd-color-label'>\r\n                            <li className=\"pd-color-option\" style={{backgroundColor: '#F87070'}}><img src={TickIcon} alt=\"Close Settings\" /></li>\r\n                            <li className=\"pd-color-option\" style={{backgroundColor: '#70F3F8'}}></li>\r\n                            <li className=\"pd-color-option\" style={{backgroundColor: '#D881F8'}}></li>\r\n                        </ul>\r\n                    </fieldset>\r\n                    <button type=\"submit\" id='pd-settings-apply-btn'>Apply</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;","C:\\Users\\Jeeva\\code\\portfolio\\src\\challenges\\pomodoro\\timer\\Timer.tsx",["44","45","46"],"C:\\Users\\Jeeva\\code\\portfolio\\src\\hooks.tsx",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":3,"column":8,"nodeType":"53","messageId":"54","endLine":3,"endColumn":20},{"ruleId":"51","severity":1,"message":"55","line":1,"column":17,"nodeType":"53","messageId":"54","endLine":1,"endColumn":25},{"ruleId":"51","severity":1,"message":"56","line":8,"column":21,"nodeType":"53","messageId":"54","endLine":8,"endColumn":31},{"ruleId":"51","severity":1,"message":"57","line":9,"column":21,"nodeType":"53","messageId":"54","endLine":9,"endColumn":31},{"ruleId":"51","severity":1,"message":"58","line":10,"column":21,"nodeType":"53","messageId":"54","endLine":10,"endColumn":31},{"ruleId":"51","severity":1,"message":"59","line":1,"column":10,"nodeType":"53","messageId":"54","endLine":1,"endColumn":14},{"ruleId":"51","severity":1,"message":"60","line":24,"column":21,"nodeType":"53","messageId":"54","endLine":24,"endColumn":33},{"ruleId":"61","severity":1,"message":"62","line":68,"column":6,"nodeType":"63","endLine":68,"endColumn":30,"suggestions":"64"},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"@typescript-eslint/no-unused-vars","'ProgressRing' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'setPdTimer' is assigned a value but never used.","'setSbTimer' is assigned a value but never used.","'setLbTimer' is assigned a value but never used.","'time' is defined but never used.","'setTotalTime' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'totalTime'. Either include it or remove the dependency array.","ArrayExpression",["67"],"no-global-assign","no-unsafe-negation",{"desc":"68","fix":"69"},"Update the dependencies array to be: [elapsedTime, currState, totalTime]",{"range":"70","text":"71"},[2198,2222],"[elapsedTime, currState, totalTime]"]